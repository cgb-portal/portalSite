<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zy.news.web.mapper.HonourMapper">
    <resultMap id="BaseResultMap" type="zy.news.web.bean.Honour">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="imageid" jdbcType="BIGINT" property="imageid"/>
        <result column="pepole" jdbcType="VARCHAR" property="pepole"/>
        <result column="honortitle" jdbcType="VARCHAR" property="honortitle"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="publishdate" jdbcType="TIMESTAMP" property="publishdate"/>
        <result column="pageview" jdbcType="BIGINT" property="pageview"/>
        <result column="content" jdbcType="LONGVARBINARY" property="content"/>
    </resultMap>
    <resultMap id="TextMap" type="zy.news.web.bean.ContentBase">
        <result column="content" jdbcType="VARCHAR" property="content"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_honour
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="zy.news.web.bean.Honour">
    insert into t_honour (id, imageid, pepole, 
      honortitle, title, author, 
      publishdate, pageview,summary,content
      )
    values (#{id,jdbcType=BIGINT}, #{imageid,jdbcType=BIGINT}, #{pepole,jdbcType=VARCHAR}, 
      #{honortitle,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publishdate,jdbcType=TIMESTAMP}, #{pageview,jdbcType=BIGINT},
      #{summary,jdbcType=VARCHAR},#{content,jdbcType=LONGVARBINARY}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="zy.news.web.bean.Honour">
    update t_honour
    set imageid = #{imageid,jdbcType=BIGINT},
      pepole = #{pepole,jdbcType=VARCHAR},
      honortitle = #{honortitle,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publishdate = #{publishdate,jdbcType=TIMESTAMP},
      summary= #{summary,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="zy.news.web.bean.Honour">
    select id, imageid, pepole, honortitle, title, author, publishdate, pageview, file.path AS imageUrl,
        (SELECT CONCAT(id,'|',title) FROM t_honour WHERE  publishdate > tmp_h.publishdate ORDER BY
        publishdate ASC LIMIT 1) as `front`,
        (SELECT CONCAT(id,'|',title) FROM t_honour WHERE  publishdate <![CDATA[<]]> tmp_h.publishdate ORDER BY
        publishdate DESC LIMIT 1) as `next`
    from t_honour tmp_h
    left join t_file file on file.fid = tmp_h.imageid
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, imageid, pepole, honortitle, title, author, publishdate, pageview,file.path AS imageUrl
    from t_honour
    left join t_file file on file.fid = imageid
    order by publishdate desc
  </select>
    <select id="exist" parameterType="zy.news.web.bean.Honour" resultType="java.lang.Integer">
    SELECT count(*) FROM t_honour t
    WHERE t.title=#{title,jdbcType=VARCHAR}
    </select>
    <select id="selectRecordWithOutBlobByPrimaryKey" resultType="zy.news.web.bean.Honour">
    select id, imageid, title
    from t_honour
    where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectContenBlobByPrimaryKey" resultMap="TextMap">
        SELECT content FROM t_honour
        WHERE id = #{id,jdbcType=BIGINT}
    </select>
    <update id="countViewByPrimaryKey">
        UPDATE t_honour
        SET pageview = pageview + 1
        WHERE
            id = #{id,jdbcType=BIGINT}
    </update>
</mapper>