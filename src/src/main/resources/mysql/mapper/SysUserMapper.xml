<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zy.news.web.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="zy.news.web.bean.SysUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="realname" jdbcType="VARCHAR" property="realname"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="zy.news.web.bean.SysUser">
    insert into t_sys_user (id, username, realname, 
      passwd)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR},
      #{passwd,jdbcType=CHAR})
  </insert>
    <update id="updateByPrimaryKey" parameterType="zy.news.web.bean.SysUser">
    update t_sys_user
    set username = #{username,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, username, realname, passwd
    from t_sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, username, realname
        from t_sys_user
        where username != '${@zy.news.web.bean.SysUser@ADMIN_NAME}'
        <if test="fastSearch !=null and fastSearch != ''">
            and (username like #{fastSearch,jdbcType=VARCHAR} OR realname like #{fastSearch,jdbcType=VARCHAR})
        </if>
        order by username asc
    </select>
    <update id="bindUserRole">
    update T_SYS_USER
    set ROLEID = #{roleid,jdbcType=NUMERIC}
    where USERNAME = #{username,jdbcType=VARCHAR}
  </update>
    <update id="updatePasswd">
        update T_SYS_USER
        set  PASSWD =#{passwd,jdbcType=CHAR}
        where ID =#{id,jdbcType=NUMERIC}
    </update>
    <select id="selectByNamePasswd" resultType="zy.news.web.bean.SysUser">
        select t.id,t.username,t.realname
        from t_sys_user t
        where t.username=#{name,jdbcType=VARCHAR} and t.passwd=#{passwd,jdbcType=VARCHAR}
    </select>
    <select id="selectByName" resultType="zy.news.web.bean.SysUser">
        select * from t_sys_user t
        where t.username=#{name,jdbcType=VARCHAR}
    </select>
    <select id="specUserEnableRoles" resultType="zy.news.web.bean.SysRole">
    SELECT
        *
    FROM
        t_sys_role tsr
    WHERE
         tsr.id IN ( SELECT DISTINCT roleid FROM t_sys_roleusers WHERE userid=#{userid,jdbcType=BIGINT} )
    </select>
    <select id="specUserUnEnableRoles" resultType="zy.news.web.bean.SysRole">
    SELECT
        *
    FROM
        t_sys_role tsr
    WHERE
        tsr.role != '${@zy.news.web.bean.SysUser@ADMIN_ROLE}'
        AND
        tsr.id NOT IN ( SELECT DISTINCT roleid FROM t_sys_roleusers WHERE userid=#{userid,jdbcType=BIGINT} )
    </select>
    <insert id="bindSpecUserRole" parameterType="zy.news.web.ui.param.RoleUserBind">
        insert into t_sys_roleusers (userid,roleid)
        values
        <foreach collection="userBind.roleids" item="roleid" separator=",">
            (#{userBind.userid,jdbcType=BIGINT},#{roleid,jdbcType=BIGINT})
        </foreach>
    </insert>
    <update id="unBindSpecUserRole" parameterType="zy.news.web.ui.param.RoleUserBind">
        DELETE
        FROM
        t_sys_roleusers
        WHERE
        userid = #{userBind.userid,jdbcType=BIGINT}
        AND roleid IN
        <foreach collection="userBind.roleids" item="roleid" open="(" separator="," close=")">
            #{roleid,jdbcType=BIGINT}
        </foreach>
    </update>
</mapper>