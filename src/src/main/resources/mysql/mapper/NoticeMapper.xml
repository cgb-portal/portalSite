<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zy.news.web.mapper.NoticeMapper">
    <resultMap id="BaseResultMap" type="zy.news.web.bean.Notice">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="ntid" jdbcType="BIGINT" property="ntid"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="publishdate" jdbcType="TIMESTAMP" property="publishdate"/>
        <result column="reviewstatus" jdbcType="TINYINT" property="reviewstatus"/>
        <result column="reviewer" jdbcType="VARCHAR" property="reviewer"/>
        <result column="reviewdate" jdbcType="TIMESTAMP" property="reviewdate"/>
        <result column="reviewComment" jdbcType="VARCHAR" property="reviewcomment"/>
        <result column="pageview" jdbcType="BIGINT" property="pageview"/>
        <result column="content" jdbcType="LONGVARBINARY" property="content"/>
    </resultMap>
    <resultMap id="TextMap" type="zy.news.web.bean.ContentBase">
        <result column="content" jdbcType="VARCHAR" property="content"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="zy.news.web.bean.Notice">
    insert into t_notice (id, title, ntid, 
      author, publishdate, reviewstatus, 
      reviewer, reviewdate, pageview,summary,
      content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{ntid,jdbcType=BIGINT}, 
      #{author,jdbcType=VARCHAR}, #{publishdate,jdbcType=TIMESTAMP}, #{reviewstatus,jdbcType=TINYINT}, 
      #{reviewer,jdbcType=VARCHAR}, #{reviewdate,jdbcType=TIMESTAMP}, #{pageview,jdbcType=BIGINT}, 
      #{summary,jdbcType=VARCHAR},#{content,jdbcType=LONGVARBINARY})
  </insert>
    <update id="updateByPrimaryKey" parameterType="zy.news.web.bean.Notice">
    update t_notice
    set
      notRiview=0,
      title = #{title,jdbcType=VARCHAR},
      ntid = #{ntid,jdbcType=BIGINT},
      author = #{author,jdbcType=VARCHAR},
      publishdate = #{publishdate,jdbcType=TIMESTAMP},
      summary= #{summary,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, title, ntid, author, publishdate, reviewstatus, reviewer, reviewdate,reviewComment, pageview,
    content
    from t_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAllNoticeSimple" resultType="zy.news.web.bean.NoticeSimple">
        SELECT
        id,
        title,
        notice.ntid,
        noticetype.noticeTName,
        author,
        publishdate,
        reviewstatus
        FROM
        t_notice notice
        LEFT JOIN t_noticetype noticetype ON notice.ntid=noticetype.ntid
        <if test="reviewStatus != 2">WHERE notice.reviewstatus=#{reviewStatus,jdbcType=TINYINT}</if>
        <if test="notReview == 1">AND notice.notRiview=0</if>
        ORDER BY publishdate DESC
        <if test="reviewStatus == 2">
            ,reviewstatus ASC
        </if>
    </select>
    <select id="exist" parameterType="zy.news.web.bean.Notice" resultType="java.lang.Integer">
    SELECT count(*) FROM t_notice t
    WHERE t.title=#{title,jdbcType=VARCHAR}
    </select>
    <select id="selectRecordWithOutBlobByPrimaryKey" resultType="zy.news.web.bean.Notice">
    select id, title
    from t_notice
    where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectContenBlobByPrimaryKey" resultMap="TextMap">
        SELECT content FROM t_notice
        WHERE id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectDetailByPrimaryKey" resultType="zy.news.web.bean.Notice">
    SELECT
       nt.id,  nt.title,  nt.ntid,
       nt.author,  nt.publishdate,  nt.reviewstatus,
       nt.reviewer, nt. reviewdate,  nt.pageview, nt.summary,
       ntp.noticeTName,
        (SELECT CONCAT(id,'|',title) FROM t_notice WHERE reviewstatus=1 and publishdate > nt.publishdate ORDER BY
        publishdate ASC LIMIT 1) as `front`,
        (SELECT CONCAT(id,'|',title) FROM t_notice WHERE reviewstatus=1 and publishdate <![CDATA[<]]> nt.publishdate ORDER BY
        publishdate DESC LIMIT 1) as `next`
    FROM
        t_notice nt
        LEFT JOIN t_noticetype ntp ON nt.ntid = ntp.ntid
    WHERE
        nt.id = #{id,jdbcType=BIGINT}
    </select>
    <update id="countViewByPrimaryKey">
        UPDATE t_notice
        SET pageview = pageview + 1
        WHERE
            id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateReviewInfo" parameterType="zy.news.web.ui.result.ReviewInfo">
        UPDATE t_notice
        SET
        notRiview=1,
        reviewstatus = #{reviewstatus,jdbcType=TINYINT},
        reviewer = #{reviewer,jdbcType=VARCHAR},
        reviewdate = #{reviewdate,jdbcType=TIMESTAMP}
        <if test="reviewComment != null and reviewComment !=''">
            ,reviewComment = #{reviewComment,jdbcType=VARCHAR}
        </if>
        WHERE
        reviewstatus=0 and
        id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectReviewInfoByPrimaryKey" resultType="zy.news.web.ui.result.ReviewInfo">
        select id,reviewstatus,reviewer,reviewdate
        ,reviewComment
        from t_notice
        where id=#{id,jdbcType=BIGINT}
    </select>
</mapper>