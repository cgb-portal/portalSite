<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zy.news.web.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="zy.news.web.bean.Comment">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="articleid" jdbcType="BIGINT" property="articleid"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="publishdate" jdbcType="TIMESTAMP" property="publishdate"/>
        <result column="reviewstatus" jdbcType="TINYINT" property="reviewstatus"/>
        <result column="reviewer" jdbcType="VARCHAR" property="reviewer"/>
        <result column="reviewdate" jdbcType="TIMESTAMP" property="reviewdate"/>
        <result column="reviewComment" jdbcType="VARCHAR" property="reviewcomment"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_comment
    where id = #{id,jdbcType=BIGINT} and reviewstatus=0
  </delete>
    <insert id="insert" parameterType="zy.news.web.bean.Comment">
    insert into t_comment (id, articleid, articletype,content,
      author, ip, publishdate,reviewstatus, reviewer,  reviewdate, reviewComment
      )
    values (#{id,jdbcType=BIGINT}, #{articleid,jdbcType=BIGINT}, #{articletype,jdbcType=TINYINT},#{content,jdbcType=VARCHAR},
      #{author,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{publishdate,jdbcType=TIMESTAMP},
       #{reviewstatus,jdbcType=TINYINT}, #{reviewer,jdbcType=VARCHAR}, #{reviewdate,jdbcType=TIMESTAMP}, #{reviewcomment,jdbcType=VARCHAR}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="zy.news.web.bean.Comment">
    update t_comment
    set
      notRiview=0,
      articleid = #{articleid,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      publishdate = #{publishdate,jdbcType=TIMESTAMP}
    where reviewstatus=0 and id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, articleid, content, author, ip, publishdate, reviewstatus,reviewer, reviewdate,
    reviewComment
    from t_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultType="zy.news.web.bean.CommentSimple">
    select id, articleid, content, author, ip, publishdate, reviewstatus, publishdate,
    reviewComment
    from t_comment
  </select>
    <select id="selectAllComments" resultType="zy.news.web.bean.CommentSimple">
        SELECT * FROM
        (SELECT cmt.*,kns.title as articleTitle FROM t_comment cmt LEFT JOIN t_knowledgeshare kns on
        kns.id=cmt.articleid WHERE
        articletype=6
        <if test="reviewStatus != 2">
            and cmt.reviewstatus=#{reviewStatus,jdbcType=TINYINT}
        </if>
        UNION ALL
        SELECT cmt.*,kns.title as articleTitle FROM t_comment cmt LEFT JOIN t_news kns on kns.id=cmt.articleid WHERE
        articletype=0
        <if test="reviewStatus != 2">
            and cmt.reviewstatus=#{reviewStatus,jdbcType=TINYINT}
        </if>
        UNION ALL
        SELECT cmt.*,kns.title as articleTitle FROM t_comment cmt LEFT JOIN t_notice kns on kns.id=cmt.articleid WHERE
        articletype=1
        <if test="reviewStatus != 2">
            and cmt.reviewstatus=#{reviewStatus,jdbcType=TINYINT}
        </if>
        )tmp_comments
        ORDER BY tmp_comments.publishdate DESC,tmp_comments.articleTitle ASC
    </select>
    <select id="selectAllSimple" resultType="zy.news.web.bean.CommentSimple">
        select  (@rownum:=@rownum+1) as seqnum,
        cmt_seq.*
        from(
        SELECT
        cmt.*
        <if test="articletype != null">
            ,article_t.title as articleTitle
        </if>
        FROM
        t_comment cmt
        <if test="articletype != null">
            LEFT JOIN
            <choose>
                <when test="0 == articletype">t_news</when>
            </choose>
            <choose>
                <when test="1 == articletype">t_notice</when>
            </choose>
            <choose>
                <when test="2 == articletype">t_quality</when>
            </choose>
            <choose>
                <when test="3 == articletype">t_regulations</when>
            </choose>
            <choose>
                <when test="4 == articletype">t_orgtrain</when>
            </choose>
            <choose>
                <when test="5 == articletype">t_honour</when>
            </choose>
            <choose>
                <when test="6 == articletype">t_knowledgeshare</when>
            </choose>
            article_t ON article_t.id = cmt.articleid
        </if>
        where 1=1
        <if test="articleid != null">
            and cmt.articleid=#{articleid,jdbcType=BIGINT}
        </if>
        <if test="reviewStatus != 2">
            and cmt.reviewstatus=#{reviewStatus,jdbcType=TINYINT}
        </if>
        ORDER BY publishdate DESC
        <if test="reviewStatus == 2">
            ,reviewstatus ASC
        </if>
        )cmt_seq,
        (select @rownum:=0 )t_row_num
    </select>
    <update id="updateReviewInfo" parameterType="zy.news.web.ui.result.ReviewInfo">
        UPDATE t_comment
        SET
        notRiview=1,
        reviewstatus = #{reviewstatus,jdbcType=TINYINT},
        reviewer = #{reviewer,jdbcType=VARCHAR},
        reviewdate = #{reviewdate,jdbcType=TIMESTAMP}
        <if test="reviewComment != null and reviewComment !=''">
            ,reviewComment = #{reviewComment,jdbcType=VARCHAR}
        </if>
        WHERE
        reviewstatus=0 and
        id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectReviewInfoByPrimaryKey" resultType="zy.news.web.ui.result.ReviewInfo">
        select id,reviewstatus,reviewer,reviewdate
        ,reviewComment
        from t_comment
        where id=#{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteAllArticleComents">
        delete from t_comment
        where id=#{id,jdbcType=BIGINT}
    </delete>
</mapper>